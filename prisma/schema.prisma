generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Department {
  id            String          @id @default(uuid())
  name          String          @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deleted       Boolean         @default(false)
  SubDepartment SubDepartment[]
  Product       Product[]
}

model SubDepartment {
  id           String     @id @default(uuid())
  name         String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deleted      Boolean    @default(false)
  departmentId String
  department   Department @relation(fields: [departmentId], references: [id])

  Category Category[]
  Product  Product[]
}

model Product {
  id              String        @id @default(uuid())
  name            String
  description     String
  brand           String?
  url             String?
  width           Int?
  length          Int?
  height          Int?
  materials       String[]
  colors          String[]
  sizes           String[]
  designs         String[]
  configurations  String[]
  categoryId      String
  price           Int
 secondHand        Boolean? @default(false)
  deleted         Boolean       @default(false)
  subDepartment   SubDepartment @relation(fields: [subDepartmentId], references: [id])
  department      Department    @relation(fields: [departmentId], references: [id])
  Image           Image[]
  caterogy        Category      @relation(fields: [categoryId], references: [id])
  subDepartmentId String
  departmentId    String
}

model Image {
  id        String  @id @default(uuid())
  productId String
  userId    String
  deleted   Boolean @default(false)
  Product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Category {
  id              String        @id @default(uuid())
  name            String
  deleted         Boolean       @default(false)
  Product         Product[]
  subdepartment   SubDepartment @relation(fields: [subDepartmentId], references: [id])
  subDepartmentId String
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  deleted       Boolean   @default(false)
  accounts      Account[]
  Image         Image[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
